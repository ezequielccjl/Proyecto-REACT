 const stampsToUpdate = database.collection('stamps').where(
            firebase.firestore.FieldPath.documentId(),
            'in',
            context.cart.map((i) => i.id)
          );

          const updateStock = async () => {
            const query = await stampsToUpdate.get();
            const batch = database.batch();
            query.docs.forEach((docSnapshot, idx) => {
              batch.update(docSnapshot.ref, {
                stock: docSnapshot.data().stock - context.cart[idx].quantity,
              });
            });
            batch.commit();
          };

          updateStock();



useEffect(()=>{
            console.log(compra)
            //Por cada elemento en carrito sacar su id y cantidad
            
            compra.items.forEach((item, indice) => {
    
                let docUpdate = db.collection('catalogo').doc(item.id)
    
                let stockDB;
                docUpdate.get()
                    .then((querySnapshot) =>{
                        stockDB = querySnapshot.data().stock
                    })
                
                if ((stockDB - item.cantidad)>=0) {
                    docUpdate.update({
                        stock: stockDB - item.cantidad
                    })
                }else{
                    alert("NO HAY STOCK DISP")
                }
                
                
            });
        }, [compra])


        else{

            //Setea el objeto compra a cargar en Firestore
            

            setCompra({
                cliente: formData,
                items: context.listaCarrito,
                fecha: firebase.firestore.Timestamp.fromDate(new Date()),
                total: context.total
            })
            
            console.log("Se setea la compra--------------")
            
        }